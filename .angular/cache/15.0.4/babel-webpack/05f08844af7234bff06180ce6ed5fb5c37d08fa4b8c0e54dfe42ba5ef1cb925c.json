{"ast":null,"code":"import { Signup } from '../signup';\nimport { Conn } from '../conn';\nimport * as CryptoJS from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../signup.service\";\nimport * as i4 from \"@angular/forms\";\nexport let SignupComponent = /*#__PURE__*/(() => {\n  class SignupComponent {\n    //here we are creating obj of Http Client so that we can use it form data transfer\n    constructor(myhttp, myrouter, signupservice) {\n      this.myhttp = myhttp;\n      this.myrouter = myrouter;\n      this.signupservice = signupservice;\n      this.disableRegister = true;\n      if (sessionStorage.getItem(\"pname\")) {\n        this.myrouter.navigateByUrl(\"/home\");\n      }\n    }\n    //here package.json file is already present so no need to create it again.\n    // also in latest angualar versions - express, bodyparser, nodemon are already pr so no need to install them too\n    ngOnInit() {}\n    /*\r\n    onsignup()\r\n    {\r\n      //body data is the data which will be sent inside our http body\r\n      var bodydata={\r\n        name:this.nm,\r\n        phone:this.phone,\r\n        email:this.email,\r\n        password:this.password\r\n      }\r\n          //here we are using our http obj\r\n      // here we're sending the data to our api using http client\r\n      // as return type of the myhttp.post is observable so we have to subscribe it in order to use it\r\n      // whatever data is responded back by the api to observer we are displaying it\r\n          //                                                aasan bhasa mein\r\n      // .post method is used to send data to api and inorder to take back the response sent by it we are subscribing it\r\n          //now if everything went good then we get CORS error which is preventing node running on port 3000 to be accessed by angular\r\n      //so now we have to tell our node that \"angular apna he bhai hai\"\r\n      this.myhttp.post(\"http://localhost:3000/signup\",bodydata, {responseType:\"text\"}).subscribe(\r\n        {\r\n          next:(resp) =>{\r\n            console.log(resp);\r\n            this.msg=resp;\r\n          },\r\n          error:(err) =>{\r\n            console.log(err);\r\n          }\r\n        }\r\n      )\r\n    }\r\n    */\n    //SIGNUP USING SERVICES AND CLASSES\n    onsignup() {\n      let checkForEmptyFields = [this.nm, this.email, this.phone, this.password, this.confirmPassword].filter(field => field == undefined || field == \"\").length;\n      console.log(\"ssd\", this.phone, checkForEmptyFields);\n      if (checkForEmptyFields) {\n        this.msg = \"Please Fill out all the fields!\";\n        $(\"#msg\").fadeIn(1000).fadeOut(2500);\n      } else if (this.password != this.confirmPassword) {\n        this.msg = \"Passwords Doesn't Match\";\n        $(\"#msg\").fadeIn(1000).fadeOut(2500);\n      } else {\n        this.disableRegister = false;\n        var encypswd = CryptoJS.AES.encrypt(this.password, Conn.skey).toString();\n        // alert(encypswd);\n        this.signupobj = new Signup(this.nm, this.phone, this.email, encypswd, \"normal\");\n        //here save2db type is observer\n        this.signupservice.save2db(this.signupobj).subscribe({\n          next: resp => {\n            this.msg = resp;\n            $(\"#msg\").fadeIn(1000).fadeOut(2500);\n          },\n          error: err => {\n            this.msg = err;\n            console.log(\"Errmsg\", err);\n          }\n        });\n      }\n    }\n  }\n  SignupComponent.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.SignupService));\n  };\n  SignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    decls: 21,\n    vars: 6,\n    consts: [[1, \"register\"], [1, \"container\"], [1, \"login-form-grids\"], [\"method\", \"post\"], [\"type\", \"text\", \"name\", \"pname\", \"placeholder\", \"Name...\", \"required\", \" \", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"phone\", \"placeholder\", \"Phone...\", \"required\", \" \", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"Email Address\", \"required\", \" \", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"required\", \" \", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"confirmPassword\", \"placeholder\", \"Password Confirmation\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Register\", \"name\", \"b1\", 3, \"click\"], [\"id\", \"msg\", 2, \"text-align\", \"center\", \"margin-top\", \"15px\"], [1, \"register-home\"], [\"routerLink\", \"/\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3, \"Register Here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"h5\");\n        i0.ɵɵtext(6, \"profile information\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 3)(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.nm = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.phone = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"h6\");\n        i0.ɵɵtext(11, \"Login information\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function SignupComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.confirmPassword = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 9);\n        i0.ɵɵlistener(\"click\", function SignupComponent_Template_input_click_15_listener() {\n          return ctx.onsignup();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\", 10);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"a\", 12);\n        i0.ɵɵtext(20, \"Home\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.nm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.phone);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.msg);\n      }\n    },\n    dependencies: [i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm]\n  });\n  return SignupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
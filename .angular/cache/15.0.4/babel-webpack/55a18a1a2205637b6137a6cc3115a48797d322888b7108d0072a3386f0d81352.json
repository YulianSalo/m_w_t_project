{"ast":null,"code":"import { Conn } from '../conn';\nimport * as CryptoJS from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../accounts.service\";\nimport * as i4 from \"@angular/forms\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(cookiesrvobj, myrouter, loginservice, myroute) {\n      this.cookiesrvobj = cookiesrvobj;\n      this.myrouter = myrouter;\n      this.loginservice = loginservice;\n      this.myroute = myroute;\n      this.myroute.queryParams.subscribe({\n        next: resp => {\n          this.prodid = resp[\"pid\"];\n        },\n        error: err => {}\n      });\n      const cookieExists = this.cookiesrvobj.check('usercookie');\n      if (cookieExists == true) {\n        var userdata = JSON.parse(this.cookiesrvobj.get('usercookie'));\n        this.loginservice.login(userdata.username).subscribe({\n          next: resp => {\n            if ((resp === null || resp === void 0 ? void 0 : resp[0]) == null) {\n              this.msg = \"Incorrect Username\";\n              $(\"#msg\").fadeIn(1000).fadeOut(2500);\n            } else {\n              if (resp[0].activated == true) {\n                if (resp[0].pass == userdata.pass) {\n                  sessionStorage.setItem(\"pname\", resp[0].name);\n                  sessionStorage.setItem(\"username\", resp[0].username);\n                  sessionStorage.setItem(\"usertype\", resp[0].usertype);\n                  if (resp[0].usertype == \"admin\") {\n                    this.myrouter.navigateByUrl(\"/adminpanel\");\n                  } else {\n                    this.myrouter.navigateByUrl(\"/home\");\n                  }\n                }\n              } else {\n                this.msg = \"Please Activate Your Account!\";\n                $(\"#msg\").fadeIn(1000).fadeOut(2500);\n              }\n            }\n          },\n          error: err => {\n            this.msg = err;\n          }\n        });\n      }\n    }\n    ngOnInit() {}\n    onlogin() {\n      this.loginservice.login(this.username).subscribe({\n        next: res => {\n          var _a;\n          if (res[0]) {\n            var decypswd = CryptoJS.AES.decrypt(res[0].pass, Conn.skey).toString(CryptoJS.enc.Utf8);\n            if (decypswd == this.password) {\n              if (((_a = res === null || res === void 0 ? void 0 : res[0]) === null || _a === void 0 ? void 0 : _a.activated) == true) {\n                if (this.rembme == true) {\n                  var cookiedata = {\n                    username: this.username,\n                    pass: res[0].pass\n                  };\n                  this.cookiesrvobj.set(\"usercookie\", JSON.stringify(cookiedata), 20);\n                }\n                sessionStorage.setItem(\"pname\", res[0].name);\n                sessionStorage.setItem(\"username\", res[0].username);\n                sessionStorage.setItem(\"usertype\", res[0].usertype);\n                if (this.prodid != undefined) this.myrouter.navigate([\"/showpdetails\"], {\n                  queryParams: {\n                    pid: this.prodid\n                  }\n                });else {\n                  if (res[0].usertype == \"admin\") this.myrouter.navigateByUrl(\"/adminpanel\");else this.myrouter.navigateByUrl(\"/home\");\n                }\n              } else {\n                this.msg = \"To Proceed Ahead, First Activate your account.\";\n              }\n            } else {\n              this.msg = \"Incorrect Password\";\n            }\n          } else {\n            this.msg = \"User Doesn't Exist, Please Create your Account First!\";\n            $(\"#msg\").fadeIn(1000).fadeOut(500);\n          }\n        },\n        error: err => {}\n      });\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.CookieService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 27,\n    vars: 4,\n    consts: [[1, \"login\"], [1, \"container\"], [\"data-wow-delay\", \".5s\", 1, \"login-form-grids\", \"animated\", \"wow\", \"slideInUp\"], [\"type\", \"email\", \"name\", \"uname\", \"placeholder\", \"Email Address\", \"required\", \" \", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"pass\", \"placeholder\", \"Password\", \"required\", \" \", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", \"name\", \"cbxremember\", 3, \"ngModel\", \"ngModelChange\"], [1, \"forgot\"], [\"routerLink\", \"/resetpassword\"], [\"type\", \"submit\", \"value\", \"Login\", 3, \"click\"], [\"routerLink\", \"/signup\"], [\"routerLink\", \"/\"], [\"aria-hidden\", \"true\", 1, \"glyphicon\", \"glyphicon-menu-right\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3, \"Login Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\")(6, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"label\")(10, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.rembme = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \"\\u00A0Remember Me\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"a\", 7);\n        i0.ɵɵtext(14, \"Forgot Password?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"input\", 8);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_input_click_15_listener() {\n          return ctx.onlogin();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"h4\");\n        i0.ɵɵtext(19, \"For New People\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"p\")(21, \"a\", 9);\n        i0.ɵɵtext(22, \"Register Here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(23, \" (Or) go back to \");\n        i0.ɵɵelementStart(24, \"a\", 10);\n        i0.ɵɵtext(25, \"Home\");\n        i0.ɵɵelement(26, \"span\", 11);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.rembme);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.msg);\n      }\n    },\n    dependencies: [i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Conn } from './conn';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SignupService = /*#__PURE__*/(() => {\n  class SignupService {\n    constructor(myhttp) {\n      this.myhttp = myhttp;\n    }\n    //here as the observable response was - signup successful wch is string so observable<string>\n    save2db(signupobj2) {\n      return this.myhttp.post(Conn.nodeurl + \"/signup\", signupobj2, {\n        responseType: \"text\"\n      });\n      //note here type of post method is observable\n      // also we are not subscribing the observable here bcoz we were not able to see the asynchronus response sent by node to us\n      // as initially response was empty so we can't see anything , later when callback function runs after getting response from node\n      // before it our resp would have already run earlier\n      // thats we subscribe it inside the app component\n    }\n  }\n\n  SignupService.ɵfac = function SignupService_Factory(t) {\n    return new (t || SignupService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  SignupService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SignupService,\n    factory: SignupService.ɵfac,\n    providedIn: 'root'\n  });\n  return SignupService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
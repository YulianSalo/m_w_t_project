{"ast":null,"code":"import { Conn } from './conn';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AccountsService = /*#__PURE__*/(() => {\n  class AccountsService {\n    constructor(myhttp) {\n      this.myhttp = myhttp;\n    }\n    login(uname) {\n      var bodydata = {\n        uname: uname\n      };\n      return this.myhttp.post(Conn.nodeurl + \"/login\", bodydata, {\n        responseType: \"json\"\n      });\n    }\n    //so basically we get an observable of type signup\n    srchuser(uname) {\n      return this.myhttp.get(Conn.nodeurl + \"/searchuser?uname=\" + uname, {\n        responseType: \"json\"\n      });\n      //by doing <Account> i am actually converting the json object received to a class object so that i can literally\n      //use the class objects attributes like normally\n    }\n\n    memlist() {\n      //following is using classes\n      return this.myhttp.get(Conn.nodeurl + \"/memlist\");\n      //following is without classes\n      // return this.myhttp.get(\"/memlist\")\n    }\n\n    changepass(databody) {\n      return this.myhttp.put(Conn.nodeurl + \"/changepass\", databody, {\n        responseType: \"json\"\n      });\n    }\n    forgetpass(databody) {\n      return this.myhttp.put(Conn.nodeurl + \"/forgetpassword\", databody, {\n        responseType: \"json\"\n      });\n    }\n    savecat2db(mydata) {\n      return this.myhttp.post(Conn.nodeurl + \"/addcat\", mydata, {\n        responseType: \"text\"\n      });\n    }\n    fetchallcat() {\n      return this.myhttp.get(Conn.nodeurl + \"/fetchallcat\", {\n        responseType: \"json\"\n      });\n    }\n    savescat2db(mydata) {\n      return this.myhttp.post(Conn.nodeurl + \"/addsubcat\", mydata, {\n        responseType: \"text\"\n      });\n    }\n    fetchallsubcat() {\n      return this.myhttp.get(Conn.nodeurl + \"/fetchallsubcat\", {\n        responseType: \"json\"\n      });\n    }\n    fetchsubcatbycatid(catid) {\n      return this.myhttp.get(Conn.nodeurl + \"/fetchsubcatbycatid?catid=\" + catid, {\n        responseType: \"json\"\n      });\n    }\n    saveprod2db(mydata) {\n      return this.myhttp.post(Conn.nodeurl + \"/addprod\", mydata, {\n        responseType: \"text\"\n      });\n    }\n    catupdate(updatedata) {\n      return this.myhttp.post(Conn.nodeurl + \"/updatecat\", updatedata, {\n        responseType: \"json\"\n      });\n    }\n    fetchsubcatdetailsbyid(scid) {\n      return this.myhttp.get(Conn.nodeurl + \"/fetchscatdetailsbyid?subcatid=\" + scid, {\n        responseType: \"json\"\n      });\n    }\n    updatesubcat(updatedData) {\n      return this.myhttp.put(Conn.nodeurl + \"/updatesubcat\", updatedData, {\n        responseType: \"json\"\n      });\n    }\n    fetchprodbyscid(scid) {\n      return this.myhttp.get(Conn.nodeurl + \"/fetchprodbyscid?subcatid=\" + scid, {\n        responseType: \"json\"\n      });\n    }\n    fetchproddetailsbyid(prodid) {\n      return this.myhttp.get(Conn.nodeurl + \"/fetchproddetailsbyid?prodid=\" + prodid, {\n        responseType: \"json\"\n      });\n    }\n    activateaccount(hashval) {\n      return this.myhttp.put(Conn.nodeurl + \"/activateaccount\", hashval, {\n        responseType: \"json\"\n      });\n    }\n    updateproduct(updatedData) {\n      return this.myhttp.put(Conn.nodeurl + \"/updateprod\", updatedData, {\n        responseType: \"json\"\n      });\n    }\n    setnewpass(data) {\n      return this.myhttp.put(Conn.nodeurl + \"/setnewpass\", data, {\n        responseType: 'json'\n      });\n    }\n  }\n  AccountsService.ɵfac = function AccountsService_Factory(t) {\n    return new (t || AccountsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AccountsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountsService,\n    factory: AccountsService.ɵfac,\n    providedIn: 'root'\n  });\n  return AccountsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Conn } from '../conn';\nimport * as CryptoJS from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../accounts.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ResetpassComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Set New Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8)(4, \"form\")(5, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ResetpassComponent_div_11_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.newpass = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function ResetpassComponent_div_11_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.cnewpass = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 11);\n    i0.ɵɵlistener(\"click\", function ResetpassComponent_div_11_Template_input_click_7_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.resetpass());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\")(9, \"br\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newpass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cnewpass);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.msg, \" \");\n  }\n}\nfunction ResetpassComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.msg, \" \");\n  }\n}\nexport let ResetpassComponent = /*#__PURE__*/(() => {\n  class ResetpassComponent {\n    constructor(myroute, myhttp, accsrvobj) {\n      this.myroute = myroute;\n      this.myhttp = myhttp;\n      this.accsrvobj = accsrvobj;\n      this.flag = true;\n      this.myroute.queryParams.subscribe({\n        next: resp => {\n          this.userhash = resp[\"code\"];\n          this.myhttp.get(Conn.nodeurl + \"/checktime?hash=\" + this.userhash, {\n            responseType: \"json\"\n          }).subscribe({\n            next: resp => {\n              if (resp.length == 0) {\n                this.flag = false;\n                this.msg = \"Try again\";\n              } else {\n                this.expirytime = resp[0].exptime;\n                this.username = resp[0].username;\n                var currentDate = new Date();\n                console.log(currentDate);\n                if (currentDate.toString() > this.expirytime) {\n                  this.flag = false;\n                  this.msg = \"Link Expired. Please request new link\";\n                } else {\n                  this.flag = true;\n                }\n              }\n            },\n            error: err => {}\n          });\n        },\n        error(err) {}\n      });\n    }\n    ngOnInit() {}\n    resetpass() {\n      if (this.cnewpass != this.newpass) {\n        this.msg = \"New Passwords Doesn't Match\";\n      } else {\n        var encypswd = CryptoJS.AES.encrypt(this.newpass, Conn.skey).toString();\n        var data = {\n          npass: encypswd,\n          uname: this.username\n        };\n        this.accsrvobj.setnewpass(data).subscribe({\n          next: res => {\n            if (res['nModified'] == 1) {\n              this.msg = \"Password Changed Successfully\";\n            } else {\n              this.msg = \"Password Doesn't Changed Successfully\";\n            }\n          },\n          error: err => {\n            this.msg = err;\n          }\n        });\n      }\n    }\n  }\n  ResetpassComponent.ɵfac = function ResetpassComponent_Factory(t) {\n    return new (t || ResetpassComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AccountsService));\n  };\n  ResetpassComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetpassComponent,\n    selectors: [[\"app-resetpass\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[1, \"breadcrumbs\"], [1, \"container\"], [\"data-wow-delay\", \".5s\", 1, \"breadcrumb\", \"breadcrumb1\", \"animated\", \"wow\", \"slideInLeft\"], [\"href\", \"index.html\"], [\"aria-hidden\", \"true\", 1, \"glyphicon\", \"glyphicon-home\"], [1, \"active\"], [1, \"login\"], [4, \"ngIf\"], [\"data-wow-delay\", \".5s\", 1, \"login-form-grids\", \"animated\", \"wow\", \"slideInUp\"], [\"type\", \"password\", \"placeholder\", \"New Password\", \"name\", \"pass\", \"required\", \" \", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Confirm New Password\", \"name\", \"pass\", \"required\", \" \", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"name\", \"b1\", \"value\", \"Reset Password\", 3, \"click\"]],\n    template: function ResetpassComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"ol\", 2)(3, \"li\")(4, \"a\", 3);\n        i0.ɵɵelement(5, \"span\", 4);\n        i0.ɵɵtext(6, \"Home\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"li\", 5);\n        i0.ɵɵtext(8, \"Set New Password\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 1);\n        i0.ɵɵtemplate(11, ResetpassComponent_div_11_Template, 11, 3, \"div\", 7);\n        i0.ɵɵtemplate(12, ResetpassComponent_div_12_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.flag);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.flag);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm]\n  });\n  return ResetpassComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
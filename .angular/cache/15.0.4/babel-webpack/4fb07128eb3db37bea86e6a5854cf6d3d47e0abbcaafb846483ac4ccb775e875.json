{"ast":null,"code":"import { Conn } from '../conn';\nimport * as CryptoJS from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../accounts.service\";\nimport * as i2 from \"@angular/router\";\nexport let ChangepswdComponent = /*#__PURE__*/(() => {\n  class ChangepswdComponent {\n    constructor(chngpassservice, loginsrvobj, myrouter) {\n      this.chngpassservice = chngpassservice;\n      this.loginsrvobj = loginsrvobj;\n      this.myrouter = myrouter;\n    }\n    ngOnInit() {}\n    changepass() {\n      if (this.newpass == this.cnewpass) {\n        this.loginsrvobj.login(sessionStorage.getItem(\"username\")).subscribe({\n          next: res => {\n            var decypswd = CryptoJS.AES.decrypt(res[0].pass, Conn.skey).toString(CryptoJS.enc.Utf8);\n            console.log(decypswd);\n            if (decypswd == this.currpass) {\n              var encypswd = CryptoJS.AES.encrypt(this.newpass, Conn.skey).toString();\n              var databody = {\n                uname: sessionStorage.getItem(\"username\"),\n                npass: encypswd\n              };\n              this.chngpassservice.changepass(databody).subscribe({\n                next: res => {\n                  if (res[\"nModified\"] == 1) {\n                    // this.msg=\"Password Changed Successfully\";\n                    alert(\"Password Changed Successfully, Re-login to proceed\");\n                    sessionStorage.clear();\n                    this.myrouter.navigateByUrl(\"/login\");\n                  } else {\n                    this.msg = \"Incorrect Current Password\";\n                  }\n                },\n                error: err => {\n                  this.msg = err;\n                }\n              });\n            } else {\n              this.msg = \"Incorrect Current Password\";\n            }\n          },\n          error: err => {\n            this.msg = err;\n          }\n        });\n      } else {\n        this.msg = \"New Passwords Doesn't Match\";\n      }\n    }\n  }\n  ChangepswdComponent.ɵfac = function ChangepswdComponent_Factory(t) {\n    return new (t || ChangepswdComponent)(i0.ɵɵdirectiveInject(i1.AccountsService), i0.ɵɵdirectiveInject(i1.AccountsService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  ChangepswdComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangepswdComponent,\n    selectors: [[\"app-changepswd\"]],\n    decls: 13,\n    vars: 4,\n    consts: [[1, \"login\"], [1, \"container\"], [\"data-wow-delay\", \".5s\", 1, \"login-form-grids\", \"animated\", \"wow\", \"slideInUp\"], [\"type\", \"password\", \"name\", \"currpass\", \"placeholder\", \"Current Password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"newpass\", \"placeholder\", \"New Password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"cnewpass\", \"placeholder\", \"Confirm New Password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Change Password\", 3, \"click\"]],\n    template: function ChangepswdComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3, \"Change Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\")(6, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ChangepswdComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.currpass = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ChangepswdComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.newpass = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ChangepswdComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.cnewpass = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 6);\n        i0.ɵɵlistener(\"click\", function ChangepswdComponent_Template_input_click_9_listener() {\n          return ctx.changepass();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.currpass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.newpass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.cnewpass);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.msg);\n      }\n    }\n  });\n  return ChangepswdComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}